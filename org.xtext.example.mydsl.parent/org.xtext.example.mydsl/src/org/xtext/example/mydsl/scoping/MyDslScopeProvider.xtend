/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.xtext.example.mydsl.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.Scopes
import org.xtext.example.mydsl.myDsl.GreetingReference
import org.xtext.example.mydsl.myDsl.Model

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class MyDslScopeProvider extends AbstractMyDslScopeProvider {

	override getScope(EObject context, EReference reference) {
		if (context instanceof GreetingReference) {
			val model = context.eContainer as Model
			return Scopes.scopeFor(
				model.greetings.takeWhile[it != context]
			)
		}
		return super.getScope(context, reference)
	}

}
